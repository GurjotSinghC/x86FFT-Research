    1 				.data
    2 10010000 73696854	aandb:	.asciiz	"This is a and b  "
    3 10010012 73696854	thisk:	.asciiz	"This is k "
    4                   # 	.align	8
    5                   
    6 				.include	"fixedops.asm"
    1          00000010	complex: 	.struct
    2          00000000	real:		.double	0.0
    3          00000008	imaginary:	.double	0.0
    4                   
    5                   # powerofTwo:	.double	2 cant remember what this is for
    6 				.code
    7                   complex.add:
    8                   # complex:v0 complex::add(complex*arg1:a0,complex*arg2:a1)
    9                   
   10 00400000 23bd0000		addi	$sp,$sp,fp.s4-fp.a4	# standard stack frame
   11 00400004 afbe0000		sw	$fp,fp.fp-fp.s4($sp)
   12 00400008 23be0000		add	$fp,$sp,fp.fp-fp.s4
   13 0040000c afdf0000		sw	$ra,fp.ra($fp)
   14 00400010 afd00000		sw	$s0,fp.s0($fp)
   15 00400014 afd10000		sw	$s1,fp.s1($fp)
   16 00400018 afd20000		sw	$s2,fp.s2($fp)
   17 0040001c afd30000		sw	$s3,fp.s3($fp)
   18 00400020 afd40000		sw	$s4,fp.s4($fp)
   19 00400024 afc40000		sw	$a0,fp.a0($fp)
   20 00400028 afc50000		sw	$a1,fp.a1($fp)
   21 0040002c afc60000		sw	$a2,fp.a2($fp)
   22 00400030 afc70000		sw	$a3,fp.a3($fp)
   23                   
   24 				l.d	$f12,complex.real($a0)
   24 00400034 c48c0000		lwc1	$f12,complex.real($a0)
   24 00400038 c48d0004		lwc1	$f12+1,complex.real+4($a0)
   25                   #  	floor.d	$f12,$f12
   26 				l.d	$f14,complex.imaginary($a0)
   26 0040003c c48e0008		lwc1	$f14,complex.imaginary($a0)
   26 00400040 c48f000c		lwc1	$f14+1,complex.imaginary+4($a0)
   27                   # 	floor.d	$f14,$f14
   28 				l.d	$f16,complex.real($a1)
   28 00400044 c4b00000		lwc1	$f16,complex.real($a1)
   28 00400048 c4b10004		lwc1	$f16+1,complex.real+4($a1)
   29                   # 	floor.d	$f16,$f16
   30 				l.d	$f18,complex.imaginary($a1)
   30 0040004c c4b20008		lwc1	$f18,complex.imaginary($a1)
   30 00400050 c4b3000c		lwc1	$f18+1,complex.imaginary+4($a1)
   31                   # 	floor.d	$f18,$f18
   32 00400054 46306000		add.d	$f0,$f12,$f16
   33 00400058 46327080		add.d	$f2,$f14,$f18
   34 				s.d	$f0,complex.real($v0)
   34 0040005c e4400000		swc1	$f0,complex.real($v0)
   34 00400060 e4410004		swc1	$f0+1,complex.real+4($v0)
   35 				s.d	$f2,complex.imaginary($v0)
   35 00400064 e4420008		swc1	$f2,complex.imaginary($v0)
   35 00400068 e443000c		swc1	$f2+1,complex.imaginary+4($v0)
   36                   
   37 				li	$a0,'\n
   37 0040006c 3404000a		ori	$a0,$0,0x0A
   38 00400070 000002cc		syscall	$print_char
   39                   
   40                   
   41                   	
   42 00400074 8fdf0000	98:	lw	$ra,fp.ra($fp)	# restore registers from stack
   43 00400078 8fd00000		lw	$s0,fp.s0($fp)
   44 0040007c 8fd10000		lw	$s1,fp.s1($fp)
   45 00400080 8fd20000		lw	$s2,fp.s2($fp)
   46 00400084 8fd30000		lw	$s3,fp.s3($fp)
   47 00400088 8fd40000		lw	$s4,fp.s4($fp)
   48 0040008c 8fde0000		lw	$fp,fp.fp($fp)
   49 00400090 23bd0000		add	$sp,$sp,fp.a4-fp.s4
   50 00400094 03e00008		jr	$ra
   51                   
   52                   
   53                   complex.mul:
   54                   #complex:v0 complex::mul(complex * arg1:$a0,complex*arg2:a1)
   55 00400098 23bd0000		addi	$sp,$sp,fp.s4-fp.a4	# standard stack frame
   56 0040009c afbe0000		sw	$fp,fp.fp-fp.s4($sp)
   57 004000a0 23be0000		add	$fp,$sp,fp.fp-fp.s4
   58 004000a4 afdf0000		sw	$ra,fp.ra($fp)
   59 004000a8 afd00000		sw	$s0,fp.s0($fp)
   60 004000ac afd10000		sw	$s1,fp.s1($fp)
   61 004000b0 afd20000		sw	$s2,fp.s2($fp)
   62 004000b4 afd30000		sw	$s3,fp.s3($fp)
   63 004000b8 afd40000		sw	$s4,fp.s4($fp)
   64 004000bc afc40000		sw	$a0,fp.a0($fp)
   65 004000c0 afc50000		sw	$a1,fp.a1($fp)
   66 004000c4 afc60000		sw	$a2,fp.a2($fp)
   67 004000c8 afc70000		sw	$a3,fp.a3($fp)
   68                   
   69                   
   70 				l.d	$f12,complex.real($a0)
   70 004000cc c48c0000		lwc1	$f12,complex.real($a0)
   70 004000d0 c48d0004		lwc1	$f12+1,complex.real+4($a0)
   71 				l.d	$f14,complex.imaginary($a0)
   71 004000d4 c48e0008		lwc1	$f14,complex.imaginary($a0)
   71 004000d8 c48f000c		lwc1	$f14+1,complex.imaginary+4($a0)
   72 				l.d	$f16,complex.real($a1)
   72 004000dc c4b00000		lwc1	$f16,complex.real($a1)
   72 004000e0 c4b10004		lwc1	$f16+1,complex.real+4($a1)
   73 				l.d	$f18,complex.imaginary($a1)
   73 004000e4 c4b20008		lwc1	$f18,complex.imaginary($a1)
   73 004000e8 c4b3000c		lwc1	$f18+1,complex.imaginary+4($a1)
   74                   
   75                   
   76                   	#f12 to f20
   77 				l.d	$f10,roundingfacttor
   77 004000ec 3c010000		lui	$at,roundingfacttor&0x8000<<1+roundingfacttor>>16
   77 004000f0 c42a0000		lwc1	$f10,roundingfacttor&0xFFFF($at)
   77 004000f4 c42b0000		lwc1	$f10+1,roundingfacttor&0xFFFF+4($at)
   78 004000f8 46206506		mov.d	$f20,$f12
   79 004000fc 4620a505		abs.d	$f20,$f20
   80 00400100 462aa03e		c.le.d	$f20,$f10
   81 00400104 45000003		bc1f	1f
   82 00400108 44806800		mtc1	$0,$f13
   83 0040010c 44806000		mtc1	$0,$f12
   84 00400110 46806321		cvt.d.w	$f12,$f12
   85                   
   86                   1:
   87 00400114 46207506		mov.d	$f20,$f14
   88 00400118 4620a505		abs.d	$f20,$f20
   89 0040011c 462aa03e		c.le.d	$f20,$f10
   90 00400120 45000003		bc1f	2f
   91 00400124 44807000		mtc1	$0,$f14
   92 00400128 44807800		mtc1	$0,$f15
   93 0040012c 468073a1		cvt.d.w	$f14,$f14
   94                   
   95                   2:	
   96                   
   97                   
   98                   
   99 00400130 46208506		mov.d	$f20,$f16
  100 00400134 4620a505		abs.d	$f20,$f20
  101 00400138 462aa03e		c.le.d	$f20,$f10
  102 0040013c 45000003		bc1f	3f
  103 00400140 44808000		mtc1	$0,$f16
  104 00400144 44808800		mtc1	$0,$f17
  105 00400148 46808421		cvt.d.w	$f16,$f16
  106                   3:
  107 0040014c 46209506		mov.d	$f20,$f18
  108 00400150 4620a505		abs.d	$f20,$f20
  109 00400154 462aa03e		c.le.d	$f20,$f10
  110 00400158 45000003		bc1f	4f
  111 0040015c 44809000		mtc1	$0,$f18
  112 00400160 44809800		mtc1	$0,$f19
  113 00400164 468094a1		cvt.d.w	$f18,$f18
  114                   	
  115                   	
  116                   4:
  117                   
  118                   
  119                   
  120                   
  121                   
  122                   
  123                   
  124                   
  125                   
  126                   	#imaginary times imagery 
  127 00400168 46306002		mul.d	$f0,$f12,$f16 			#real and real
  128 0040016c 46327082		mul.d	$f2,$f14,$f18 		       	#imagine and maignary
  129 00400170 46220001		sub.d	$f0,$f0,$f2 			#i*i is -1
  130                   	
  131 00400174 46307082		mul.d	$f2,$f14,$f16
  132 00400178 46326102		mul.d	$f4,$f12,$f18
  133 0040017c 46241080		add.d	$f2,$f2,$f4
  134                   
  135 				s.d	$f0,complex.real($v0)
  135 00400180 e4400000		swc1	$f0,complex.real($v0)
  135 00400184 e4410004		swc1	$f0+1,complex.real+4($v0)
  136                   
  137 				s.d	$f2,complex.imaginary($v0)
  137 00400188 e4420008		swc1	$f2,complex.imaginary($v0)
  137 0040018c e443000c		swc1	$f2+1,complex.imaginary+4($v0)
  138 00400190 8fdf0000	98:	lw	$ra,fp.ra($fp)	# restore registers from stack
  139 00400194 8fd00000		lw	$s0,fp.s0($fp)
  140 00400198 8fd10000		lw	$s1,fp.s1($fp)
  141 0040019c 8fd20000		lw	$s2,fp.s2($fp)
  142 004001a0 8fd30000		lw	$s3,fp.s3($fp)
  143 004001a4 8fd40000		lw	$s4,fp.s4($fp)
  144 004001a8 8fde0000		lw	$fp,fp.fp($fp)
  145 004001ac 23bd0000		add	$sp,$sp,fp.a4-fp.s4
  146 004001b0 03e00008		jr	$ra
  147                   
  148                   
  149                   complex.sub:
  150                   # complex:v0 complex::sub(complex*arg1:a0,complex*arg2:a1)
  151                   
  152 004001b4 23bd0000		addi	$sp,$sp,fp.s4-fp.a4	# standard stack frame
  153 004001b8 afbe0000		sw	$fp,fp.fp-fp.s4($sp)
  154 004001bc 23be0000		add	$fp,$sp,fp.fp-fp.s4
  155 004001c0 afdf0000		sw	$ra,fp.ra($fp)
  156 004001c4 afd00000		sw	$s0,fp.s0($fp)
  157 004001c8 afd10000		sw	$s1,fp.s1($fp)
  158 004001cc afd20000		sw	$s2,fp.s2($fp)
  159 004001d0 afd30000		sw	$s3,fp.s3($fp)
  160 004001d4 afd40000		sw	$s4,fp.s4($fp)
  161 004001d8 afc40000		sw	$a0,fp.a0($fp)
  162 004001dc afc50000		sw	$a1,fp.a1($fp)
  163 004001e0 afc60000		sw	$a2,fp.a2($fp)
  164 004001e4 afc70000		sw	$a3,fp.a3($fp)
  165 				l.d	$f12,complex.real($a0)
  165 004001e8 c48c0000		lwc1	$f12,complex.real($a0)
  165 004001ec c48d0004		lwc1	$f12+1,complex.real+4($a0)
  166                   #  	floor.d	$f12,$f12
  167 				l.d	$f14,complex.imaginary($a0)
  167 004001f0 c48e0008		lwc1	$f14,complex.imaginary($a0)
  167 004001f4 c48f000c		lwc1	$f14+1,complex.imaginary+4($a0)
  168                   #  	floor.d	$f14,$f14
  169 				l.d	$f16,complex.real($a1)
  169 004001f8 c4b00000		lwc1	$f16,complex.real($a1)
  169 004001fc c4b10004		lwc1	$f16+1,complex.real+4($a1)
  170                   #  	floor.d	$f16,$f16
  171 				l.d	$f18,complex.imaginary($a1)
  171 00400200 c4b20008		lwc1	$f18,complex.imaginary($a1)
  171 00400204 c4b3000c		lwc1	$f18+1,complex.imaginary+4($a1)
  172                   # 	floor.d	$f18,$f18
  173                   
  174                   	#f12 to f20
  175 				l.d	$f10,roundingfacttor
  175 00400208 3c010000		lui	$at,roundingfacttor&0x8000<<1+roundingfacttor>>16
  175 0040020c c42a0000		lwc1	$f10,roundingfacttor&0xFFFF($at)
  175 00400210 c42b0000		lwc1	$f10+1,roundingfacttor&0xFFFF+4($at)
  176 00400214 46206506		mov.d	$f20,$f12
  177 00400218 4620a505		abs.d	$f20,$f20
  178 0040021c 462aa03e		c.le.d	$f20,$f10
  179 00400220 45000003		bc1f	1f
  180 00400224 44806800		mtc1	$0,$f13
  181 00400228 44806000		mtc1	$0,$f12
  182 0040022c 46806321		cvt.d.w	$f12,$f12
  183                   
  184                   1:
  185 00400230 46207506		mov.d	$f20,$f14
  186 00400234 4620a505		abs.d	$f20,$f20
  187 00400238 462aa03e		c.le.d	$f20,$f10
  188 0040023c 45000003		bc1f	2f
  189 00400240 44807000		mtc1	$0,$f14
  190 00400244 44807800		mtc1	$0,$f15
  191 00400248 468073a1		cvt.d.w	$f14,$f14
  192                   
  193                   2:	
  194                   
  195                   
  196                   
  197 0040024c 46208506		mov.d	$f20,$f16
  198 00400250 4620a505		abs.d	$f20,$f20
  199 00400254 462aa03e		c.le.d	$f20,$f10
  200 00400258 45000003		bc1f	3f
  201 0040025c 44808000		mtc1	$0,$f16
  202 00400260 44808800		mtc1	$0,$f17
  203 00400264 46808421		cvt.d.w	$f16,$f16
  204                   3:
  205 00400268 46209506		mov.d	$f20,$f18
  206 0040026c 4620a505		abs.d	$f20,$f20
  207 00400270 462aa03e		c.le.d	$f20,$f10
  208 00400274 45000003		bc1f	4f
  209 00400278 44809000		mtc1	$0,$f18
  210 0040027c 44809800		mtc1	$0,$f19
  211 00400280 468094a1		cvt.d.w	$f18,$f18
  212                   	
  213                   	
  214                   4:
  215                   
  216                   
  217                   
  218                   
  219                   
  220 00400284 46306001		sub.d	$f0,$f12,$f16
  221 00400288 46327081		sub.d	$f2,$f14,$f18
  222 				s.d	$f0,complex.real($v0)
  222 0040028c e4400000		swc1	$f0,complex.real($v0)
  222 00400290 e4410004		swc1	$f0+1,complex.real+4($v0)
  223 				s.d	$f2,complex.imaginary($v0)
  223 00400294 e4420008		swc1	$f2,complex.imaginary($v0)
  223 00400298 e443000c		swc1	$f2+1,complex.imaginary+4($v0)
  224 0040029c 8fdf0000	98:	lw	$ra,fp.ra($fp)	# restore registers from stack
  225 004002a0 8fd00000		lw	$s0,fp.s0($fp)
  226 004002a4 8fd10000		lw	$s1,fp.s1($fp)
  227 004002a8 8fd20000		lw	$s2,fp.s2($fp)
  228 004002ac 8fd30000		lw	$s3,fp.s3($fp)
  229 004002b0 8fd40000		lw	$s4,fp.s4($fp)
  230 004002b4 8fde0000		lw	$fp,fp.fp($fp)
  231 004002b8 23bd0000		add	$sp,$sp,fp.a4-fp.s4
  232 004002bc 03e00008		jr	$ra
  233                   
  234                   complex.div:
  235                   #complex:v0 complex::div(complex*arg1:a0,complex*arg2:a1)
  236 004002c0 23bd0000		addi	$sp,$sp,fp.s4-fp.a4	# standard stack frame
  237 004002c4 afbe0000		sw	$fp,fp.fp-fp.s4($sp)
  238 004002c8 23be0000		add	$fp,$sp,fp.fp-fp.s4
  239 004002cc afdf0000		sw	$ra,fp.ra($fp)
  240 004002d0 afd00000		sw	$s0,fp.s0($fp)
  241 004002d4 afd10000		sw	$s1,fp.s1($fp)
  242 004002d8 afd20000		sw	$s2,fp.s2($fp)
  243 004002dc afd30000		sw	$s3,fp.s3($fp)
  244 004002e0 afd40000		sw	$s4,fp.s4($fp)
  245 004002e4 afc40000		sw	$a0,fp.a0($fp)
  246 004002e8 afc50000		sw	$a1,fp.a1($fp)
  247 004002ec afc60000		sw	$a2,fp.a2($fp)
  248 004002f0 afc70000		sw	$a3,fp.a3($fp)
  249 				l.d	$f12,complex.real($a0)
  249 004002f4 c48c0000		lwc1	$f12,complex.real($a0)
  249 004002f8 c48d0004		lwc1	$f12+1,complex.real+4($a0)
  250 				l.d	$f14,complex.imaginary($a0)
  250 004002fc c48e0008		lwc1	$f14,complex.imaginary($a0)
  250 00400300 c48f000c		lwc1	$f14+1,complex.imaginary+4($a0)
  251 				l.d	$f16,complex.real($a1)
  251 00400304 c4b00000		lwc1	$f16,complex.real($a1)
  251 00400308 c4b10004		lwc1	$f16+1,complex.real+4($a1)
  252 				l.d	$f18,complex.imaginary($a1)
  252 0040030c c4b20008		lwc1	$f18,complex.imaginary($a1)
  252 00400310 c4b3000c		lwc1	$f18+1,complex.imaginary+4($a1)
  253                   
  254                   		#f12 to f20
  255 				l.d	$f10,roundingfacttor
  255 00400314 3c010000		lui	$at,roundingfacttor&0x8000<<1+roundingfacttor>>16
  255 00400318 c42a0000		lwc1	$f10,roundingfacttor&0xFFFF($at)
  255 0040031c c42b0000		lwc1	$f10+1,roundingfacttor&0xFFFF+4($at)
  256 00400320 46206506		mov.d	$f20,$f12
  257 00400324 4620a505		abs.d	$f20,$f20
  258 00400328 462aa03e		c.le.d	$f20,$f10
  259 0040032c 45000003		bc1f	1f
  260 00400330 44806800		mtc1	$0,$f13
  261 00400334 44806000		mtc1	$0,$f12
  262 00400338 46806321		cvt.d.w	$f12,$f12
  263                   
  264                   1:
  265 0040033c 46207506		mov.d	$f20,$f14
  266 00400340 4620a505		abs.d	$f20,$f20
  267 00400344 462aa03e		c.le.d	$f20,$f10
  268 00400348 45000003		bc1f	2f
  269 0040034c 44807000		mtc1	$0,$f14
  270 00400350 44807800		mtc1	$0,$f15
  271 00400354 468073a1		cvt.d.w	$f14,$f14
  272                   
  273                   2:	
  274                   
  275                   
  276                   
  277 00400358 46208506		mov.d	$f20,$f16
  278 0040035c 4620a505		abs.d	$f20,$f20
  279 00400360 462aa03e		c.le.d	$f20,$f10
  280 00400364 45000003		bc1f	3f
  281 00400368 44808000		mtc1	$0,$f16
  282 0040036c 44808800		mtc1	$0,$f17
  283 00400370 46808421		cvt.d.w	$f16,$f16
  284                   3:
  285 00400374 46209506		mov.d	$f20,$f18
  286 00400378 4620a505		abs.d	$f20,$f20
  287 0040037c 462aa03e		c.le.d	$f20,$f10
  288 00400380 45000003		bc1f	4f
  289 00400384 44809000		mtc1	$0,$f18
  290 00400388 44809800		mtc1	$0,$f19
  291 0040038c 468094a1		cvt.d.w	$f18,$f18
  292                   	
  293                   	
  294                   4:
  295                   
  296                   
  297                   
  298                   
  299                   
  300                   
  301                   
  302                   
  303                   
  304                   
  305                   
  306 00400390 46306002		mul.d	$f0,$f12,$f16 	# a*c
  307 00400394 46327082		mul.d	$f2,$f14,$f18 	# b*d
  308 00400398 46220000		add.d	$f0,$f0,$f2 	# ac + bd
  309 0040039c 46307082		mul.d	$f2,$f14,$f16	# bc
  310 004003a0 46326102		mul.d	$f4,$f12,$f18	# ad
  311 004003a4 46241081		sub.d	$f2,$f2,$f4	# bc-ad
  312 004003a8 46308102		mul.d	$f4,$f16,$f16	#c²
  313 004003ac 46329202		mul.d	$f8,$f18,$f18	#d²
  314 004003b0 46282100		add.d	$f4,$f4,$f8	#c²+d²
  315 004003b4 46240003		div.d	$f0,$f0,$f4	# whole real term
  316 004003b8 46241083		div.d	$f2,$f2,$f4	# whole imaginary term
  317 				s.d	$f0,complex.real($v0)
  317 004003bc e4400000		swc1	$f0,complex.real($v0)
  317 004003c0 e4410004		swc1	$f0+1,complex.real+4($v0)
  318 				s.d	$f2,complex.imaginary($v0)
  318 004003c4 e4420008		swc1	$f2,complex.imaginary($v0)
  318 004003c8 e443000c		swc1	$f2+1,complex.imaginary+4($v0)
  319 004003cc 8fdf0000	98:	lw	$ra,fp.ra($fp)	# restore registers from stack
  320 004003d0 8fd00000		lw	$s0,fp.s0($fp)
  321 004003d4 8fd10000		lw	$s1,fp.s1($fp)
  322 004003d8 8fd20000		lw	$s2,fp.s2($fp)
  323 004003dc 8fd30000		lw	$s3,fp.s3($fp)
  324 004003e0 8fd40000		lw	$s4,fp.s4($fp)
  325 004003e4 8fde0000		lw	$fp,fp.fp($fp)
  326 004003e8 23bd0000		add	$sp,$sp,fp.a4-fp.s4
  327 004003ec 03e00008		jr	$ra
    7                   
    8                   
    9 				.data
   10 10010020 aaaaaaaa	decimationtable:	.word	0xaaaaaaaa
   11 10010024 55555555				.word	0x55555555
   12 10010028 cccccccc				.word	0xcccccccc
   13 1001002c 33333333				.word	0x33333333
   14 10010030 f0f0f0f0				.word	0xf0f0f0f0
   15 10010034 0f0f0f0f				.word	0x0f0f0f0f
   16 10010038 ff00ff00				.word	0xff00ff00
   17 1001003c 00ff00ff				.word	0x00ff00ff
   18                   
   19 10010040 3ff00000	PHI:	.double	1.0,0.0			# 360  	N=0
   20 10010050 bff00000		.double	-1.0,0.0		# -180 	N=1
   21 10010060 00000000		.double	0.0,-1.0		# -90 	N=2
   22 10010070 3fe6a09e		.double	0.7071067811865476,-0.7071067811865475 	#-45 	N=3
   23 10010080 3fed906b		.double	0.9238795325112867,-0.3826834323650898	#-22.5 	N=4
   24 10010090 3fef6297		.double	0.9807852804032304,-0.19509032201612825 #-11.25 
   25 100100a0 3fefd88d		.double	0.9951847266721969,-0.0980171403295606
   26 100100b0 3feff621		.double	0.9987954562051724,-0.04906767432741801
   27 100100c0 3feffd88		.double	0.9996988186962042,-0.02454122852291229
   28 100100d0 3fefff62		.double	0.9999247018391445,-0.01227153828571993
   29 100100e0 3fefffd8		.double	0.9999811752826011,-6.135884649154475e-3
   30 100100f0 3feffff6		.double	0.9999952938095762,-3.067956762965976e-3
   31 10010100 3feffffd		.double	0.9999988234517019,-1.5339801862847655e-3
   32 10010110 3fefffff		.double	0.9999997058628822,-7.669903187427044e-4
   33 10010120 3fefffff		.double	0.9999999264657179,-3.8349518757139553e-4
   34 10010130 3fefffff		.double	0.9999999816164293,-1.9174759731070328e-4
   35 10010140 3fefffff		.double	0.9999999954041073,-9.587379909597734e-5
   36 10010150 3fefffff		.double 0.9999999988510269,-4.793689960306688e-5
   37 10010160 3fefffff		.double	0.9999999997127567,-2.3968449808418217e-5
   38 10010170 3fefffff		.double	0.9999999999281892,-1.1984224905069705e-5
   39 10010180 3fefffff		.double	0.9999999999820472,-5.992112452642428e-6
   40                   
   41                   
   42                   
   43                   
   44                   
   45                   
   46                   
   47                   
   48 				.code
   49                   
   50                   
   51                   
   52                   complex.Cooley_Tukey_FFT:	
   53                   
   54 004003f0 23bd0000			addi	$sp,$sp,fp.s4-fp.a4	# standard stack frame
   55 004003f4 afbe0000			sw	$fp,fp.fp-fp.s4($sp)
   56 004003f8 23be0000			add	$fp,$sp,fp.fp-fp.s4
   57 004003fc afdf0000			sw	$ra,fp.ra($fp)
   58 00400400 afd00000			sw	$s0,fp.s0($fp)
   59 00400404 afd10000			sw	$s1,fp.s1($fp)
   60 00400408 afd20000			sw	$s2,fp.s2($fp)
   61 0040040c afd30000			sw	$s3,fp.s3($fp)
   62 00400410 afd40000			sw	$s4,fp.s4($fp)
   63 00400414 afc40000			sw	$a0,fp.a0($fp)
   64 00400418 afc50000			sw	$a1,fp.a1($fp)
   65 0040041c afc60000			sw	$a2,fp.a2($fp)
   66 00400420 afc70000			sw	$a3,fp.a3($fp)				
   67                   
   68                   
   69                   
   70                   
   71                   
   72                   
   73                   # void fft(CArray &x,unsigned int m)
   74                   					# {
   75                   					#     // DFT
   76                   	#     unsigned int N = x.size(), k = N, n;
   77 					lw	$t0,N		# N = size
   77 00400424 3c010000		lui	$at,N&0x8000<<1+N>>16
   77 00400428 8c280000		lw	$t0,N&0xFFFF($at)	
   78 0040042c 01004821			mov	$t1,$t0		# k = N
   79 					li	$t2,0		#n = 0	
   79 00400430 340a0000		ori	$t2,$0,0x00
   80                   					# double thetaT = PI / N; // division done in Long double output into double
   81 				 	l.d	$f0,PI
   81 00400434 3c010000		lui	$at,PI&0x8000<<1+PI>>16
   81 00400438 c4200000		lwc1	$f0,PI&0xFFFF($at)
   81 0040043c c4210000		lwc1	$f0+1,PI&0xFFFF+4($at)
   82 				 	l.d	$f2,Nfloat	
   82 00400440 3c010000		lui	$at,Nfloat&0x8000<<1+Nfloat>>16
   82 00400444 c4220000		lwc1	$f2,Nfloat&0xFFFF($at)
   82 00400448 c4230000		lwc1	$f2+1,Nfloat&0xFFFF+4($at)
   83 0040044c 46220103		 	div.d	$f4,$f0,$f2
   84 				 	s.d	$f4,ThetaT
   84 00400450 3c010000		lui	$at,ThetaT&0x8000<<1+ThetaT>>16
   84 00400454 e4240000		swc1	$f4,ThetaT&0xFFFF($at)
   84 00400458 e4250000		swc1	$f4+1,ThetaT&0xFFFF+4($at)
   85                   	 				#Complex phiT = Complex(cos(thetaT), -sin(thetaT)), T;	
   86                   	 	#f4 has thetaT	
   87 0040045c 46202190		 	cos.d	$f6,$f4
   88 00400460 46202208		 	sin.d	$f8,$f4
   89 00400464 46204207		 	neg.d	$f8,$f8
   90 				 	s.d	$f6,phiT
   90 00400468 3c010000		lui	$at,phiT&0x8000<<1+phiT>>16
   90 0040046c e4260000		swc1	$f6,phiT&0xFFFF($at)
   90 00400470 e4270000		swc1	$f6+1,phiT&0xFFFF+4($at)
   91 				 	la	$t9,phiT
   91 00400474 3c190000		lui	$t9,0x00
   91 00400478 37390000		ori	$t9,$t9,0x00
   92 				 	s.d	$f8,8($t9)	#basically storing to the double next phiT in memory
   92 0040047c e7280008		swc1	$f8,8($t9)
   92 00400480 e729000c		swc1	$f8+1,8+4($t9)
   93                   	
   94                   	
   95                   	
   96 					lw	$t8,m
   96 00400484 3c010000		lui	$at,m&0x8000<<1+m>>16
   96 00400488 8c380000		lw	$t8,m&0xFFFF($at)	
   97                   			
   98                   		
   99                   	
  100                   	
  101 					li	$a0,'\n
  101 0040048c 3404000a		ori	$a0,$0,0x0A
  102 00400490 000002cc			syscall	$print_char
  103 					li	$a0,'\n
  103 00400494 3404000a		ori	$a0,$0,0x0A
  104 00400498 000002cc			syscall	$print_char
  105 					la	$a0,firstphit
  105 0040049c 3c040000		lui	$a0,0x00
  105 004004a0 34840000		ori	$a0,$a0,0x00
  106 004004a4 0000010c			syscall	$print_string	
  107 					l.d	$f12,phiT
  107 004004a8 3c010000		lui	$at,phiT&0x8000<<1+phiT>>16
  107 004004ac c42c0000		lwc1	$f12,phiT&0xFFFF($at)
  107 004004b0 c42d0000		lwc1	$f12+1,phiT&0xFFFF+4($at)
  108 004004b4 000000cc			syscall	$print_double
  109 					l.d	$f12,8($t9)
  109 004004b8 c72c0008		lwc1	$f12,8($t9)
  109 004004bc c72d000c		lwc1	$f12+1,8+4($t9)
  110 004004c0 000000cc			syscall	$print_double
  111                   		#t9 is now phiT address
  112                   
  113                   	
  114                   
  115                   
  116                   
  117                   				#     while (k > 1)
  118                   				#     {
  119 					li	$t6,1
  119 004004c4 340e0001		ori	$t6,$0,0x01
  120 			top:		bgt	$t6,$t1,whileend
  120 004004c8 012e082a		slt	$at,$t1,$t6
  120 004004cc 142000a6		bne	$at,$0,whileend
  121 004004d0 11c900a5			beq	$t6,$t1,whileend
  122                   			#      n = k;
  123 004004d4 01205021			mov	$t2,$t1
  124                   				#      k >>= 1;
  125 004004d8 00094842			srl	$t1,$t1,1
  126 					li	$a0,'\n
  126 004004dc 3404000a		ori	$a0,$0,0x0A
  127 004004e0 000002cc			syscall	$print_char
  128 					la	$a0,thisk
  128 004004e4 3c041001		lui	$a0,0x1001
  128 004004e8 34840012		ori	$a0,$a0,0x12
  129 004004ec 0000010c			syscall	$print_string
  130 004004f0 01202021			mov	$a0,$t1
  131 004004f4 0000004c			syscall	$print_int
  132                   
  133                   				#      phiT = phiT * phiT;
  134 					la	$v0,phiT  		#output stored here
  134 004004f8 3c020000		lui	$v0,0x00
  134 004004fc 34420000		ori	$v0,$v0,0x00
  135                   # 		addi	$v0,72
  136 					la	$a0,phiT
  136 00400500 3c040000		lui	$a0,0x00
  136 00400504 34840000		ori	$a0,$a0,0x00
  137 					la	$a1,phiT
  137 00400508 3c050000		lui	$a1,0x00
  137 0040050c 34a50000		ori	$a1,$a1,0x00
  138                   	
  139                   	
  140 00400510 0c100026			jal	complex.mul #phiTmul
  141                   # 	
  142 					li		$a0,'\n	#this is the debug string to view the first phit calc
  142 00400514 3404000a		ori	$a0,$0,0x0A
  143 00400518 000002cc			syscall		$print_char
  144 					la		$a0,firstph2
  144 0040051c 3c040000		lui	$a0,0x00
  144 00400520 34840000		ori	$a0,$a0,0x00
  145 00400524 0000010c			syscall		$print_string
  146                   	
  147 					l.d		$f12,phiT	#prints real value of phit
  147 00400528 3c010000		lui	$at,phiT&0x8000<<1+phiT>>16
  147 0040052c c42c0000		lwc1	$f12,phiT&0xFFFF($at)
  147 00400530 c42d0000		lwc1	$f12+1,phiT&0xFFFF+4($at)
  148 00400534 000000cc			syscall		$print_double
  149                   	
  150                   	
  151 					la		$a0,SPACE
  151 00400538 3c040000		lui	$a0,0x00
  151 0040053c 34840000		ori	$a0,$a0,0x00
  152 00400540 0000010c			syscall		$print_string
  153                   	
  154                   	
  155 					la		$a0,phiT	#prints the imaginary v alue of phit
  155 00400544 3c040000		lui	$a0,0x00
  155 00400548 34840000		ori	$a0,$a0,0x00
  156 					l.d		$f12,8($a0)
  156 0040054c c48c0008		lwc1	$f12,8($a0)
  156 00400550 c48d000c		lwc1	$f12+1,8+4($a0)
  157 00400554 000000cc			syscall		$print_double
  158                   	
  159 					li		$a3,1
  159 00400558 34070001		ori	$a3,$0,0x01
  160 0040055c 44870000			mtc1		$a3,$f0
  161 00400560 46800021			cvt.d.w		$f0,$f0
  162 					la		$a3,T
  162 00400564 3c070000		lui	$a3,0x00
  162 00400568 34e70000		ori	$a3,$a3,0x00
  163 					s.d		$f0,complex.real($a3)
  163 0040056c e4e00000		swc1	$f0,complex.real($a3)
  163 00400570 e4e10004		swc1	$f0+1,complex.real+4($a3)
  164                   		
  165 00400574 44800000			mtc1		$0,$f0
  166 00400578 44800800			mtc1		$0,$f1
  167 0040057c 46800021			cvt.d.w		$f0,$f0
  168 					s.d		$f0,complex.imaginary($a3)
  168 00400580 e4e00008		swc1	$f0,complex.imaginary($a3)
  168 00400584 e4e1000c		swc1	$f0+1,complex.imaginary+4($a3)
  169                   	
  170 					li		$t9,0 #l =0				
  170 00400588 34190000		ori	$t9,$0,0x00
  171                   tloop:				#         for (unsigned int l = 0; l < k; l++)
  172                   	
  173 					bge		$t9,$t1,tloopend	
  173 0040058c 0329082a		slt	$at,$t9,$t1
  173 00400590 10200074		beq	$at,$0,tloopend
  174                   				#         {floop
  175                   				#             for (unsigned int a = l; a < N; a += n)
  176 00400594 0320c021			mov		$t8,$t9	#a = l
  177 			sloop:	bge		$t8,$t0,sloopend
  177 00400598 0308082a		slt	$at,$t8,$t0
  177 0040059c 1020005c		beq	$at,$0,sloopend
  178                   					#             
  179                   					# 	unsigned int b = a + k;
  180 004005a0 03095820		add			$t3,$t8,$t1	# Complex t = x[a] - x[b];
  181 				lw			$t7,Data 		#array
  181 004005a4 3c010000		lui	$at,Data&0x8000<<1+Data>>16
  181 004005a8 8c2f0000		lw	$t7,Data&0xFFFF($at)	
  182                   
  183                   
  184                   
  185                   	#DEBUG strins to print and b
  186 				li			$a0,'\n
  186 004005ac 3404000a		ori	$a0,$0,0x0A
  187 004005b0 000002cc		syscall			$print_char
  188 				la			$a0,aandb
  188 004005b4 3c041001		lui	$a0,0x1001
  188 004005b8 34840000		ori	$a0,$a0,0x00
  189 004005bc 0000010c		syscall			$print_string
  190 004005c0 03002021		mov			$a0,$t8
  191 004005c4 0000004c		syscall			$print_int
  192 				la			$a0,SPACE
  192 004005c8 3c040000		lui	$a0,0x00
  192 004005cc 34840000		ori	$a0,$a0,0x00
  193 004005d0 0000010c		syscall			$print_string
  194 004005d4 01602021		mov			$a0,$t3
  195 004005d8 0000004c		syscall			$print_int
  196                   	#Debug strgins to end and b
  197 				li			$s1,16
  197 004005dc 34110010		ori	$s1,$0,0x10
  198 				mul			$a0,$t8,$s1
  198 004005e0 03110018		mult	$t8,$s1
  198 004005e4 00002012		mflo	$a0
  199                   
  200 004005e8 01e42020		add			$a0,$t7,$a0 #x[a]	
  201                   
  202 				mul			$s0,$t3,$s1	# multily b by 16
  202 004005ec 01710018		mult	$t3,$s1
  202 004005f0 00008012		mflo	$s0
  203                   	
  204                   
  205                   
  206                   	
  207 004005f4 01f02820		add			$a1,$t7,$s0
  208                   
  209 				la			$v0,t	#need to know the address of the output	
  209 004005f8 3c020000		lui	$v0,0x00
  209 004005fc 34420000		ori	$v0,$v0,0x00
  210 00400600 0c10006d		jal			complex.sub #cahnged from mul	
  211                   
  212                   
  213                   
  214 				li			$a0,'\n		#this is t printing
  214 00400604 3404000a		ori	$a0,$0,0x0A
  215 00400608 000002cc		syscall			$print_char
  216 				la			$a0,compsub
  216 0040060c 3c040000		lui	$a0,0x00
  216 00400610 34840000		ori	$a0,$a0,0x00
  217 00400614 0000010c		syscall			$print_string
  218 				l.d			$f12,t
  218 00400618 3c010000		lui	$at,t&0x8000<<1+t>>16
  218 0040061c c42c0000		lwc1	$f12,t&0xFFFF($at)
  218 00400620 c42d0000		lwc1	$f12+1,t&0xFFFF+4($at)
  219 00400624 000000cc		syscall			$print_double
  220 				la			$a0,SPACE
  220 00400628 3c040000		lui	$a0,0x00
  220 0040062c 34840000		ori	$a0,$a0,0x00
  221 00400630 0000010c		syscall			$print_string
  222 				la			$s5,t
  222 00400634 3c150000		lui	$s5,0x00
  222 00400638 36b50000		ori	$s5,$s5,0x00
  223 				l.d			$f12,8($s5)
  223 0040063c c6ac0008		lwc1	$f12,8($s5)
  223 00400640 c6ad000c		lwc1	$f12+1,8+4($s5)
  224 00400644 000000cc		syscall			$print_double
  225                   
  226                   	
  227                   			#                 x[a] += x[b];
  228 00400648 03008021		mov			$s0,$t8	#t8 is a
  229 				li			$s1,16
  229 0040064c 34110010		ori	$s1,$0,0x10
  230 				mul			$s0,$s0,$s1 #byte index a
  230 00400650 02110018		mult	$s0,$s1
  230 00400654 00008012		mflo	$s0
  231 00400658 01f02020		add			$a0,$t7,$s0 #x[a]
  232 0040065c 00801021		mov			$v0,$a0	#fixes
  233 00400660 01608021		mov			$s0,$t3	#b
  234 				mul			$s0,$s0,$s1	# multily b by 16
  234 00400664 02110018		mult	$s0,$s1
  234 00400668 00008012		mflo	$s0
  235 0040066c 01f02820		add			$a1,$t7,$s0
  236                   
  237 00400670 0c100000		jal			complex.add
  238                   	
  239                   
  240                   # 	li	$a0,'\n
  241                   # 	syscall	$print_char
  242                   	
  243 				la			$a0,compadd
  243 00400674 3c040000		lui	$a0,0x00
  243 00400678 34840000		ori	$a0,$a0,0x00
  244 0040067c 0000010c		syscall			$print_string
  245                   # 
  246 				l.d			$f12,complex.real($v0)
  246 00400680 c44c0000		lwc1	$f12,complex.real($v0)
  246 00400684 c44d0004		lwc1	$f12+1,complex.real+4($v0)
  247 00400688 000000cc	 	syscall			$print_double
  248                   
  249 				la			$a0,SPACE
  249 0040068c 3c040000		lui	$a0,0x00
  249 00400690 34840000		ori	$a0,$a0,0x00
  250 00400694 0000010c		syscall			$print_string
  251 				l.d			$f12,complex.imaginary($v0)
  251 00400698 c44c0008		lwc1	$f12,complex.imaginary($v0)
  251 0040069c c44d000c		lwc1	$f12+1,complex.imaginary+4($v0)
  252 004006a0 000000cc		syscall			$print_double
  253                   
  254                   
  255                   			#                 x[b] = t * T;
  256 004006a4 01608021		mov			$s0,$t3	#b
  257 				mul			$s0,$s0,$s1	# multily b by 16
  257 004006a8 02110018		mult	$s0,$s1
  257 004006ac 00008012		mflo	$s0
  258 004006b0 020f1020		add			$v0,$s0,$t7
  259                   
  260 				la			$a0,t
  260 004006b4 3c040000		lui	$a0,0x00
  260 004006b8 34840000		ori	$a0,$a0,0x00
  261 				la			$a1,T
  261 004006bc 3c050000		lui	$a1,0x00
  261 004006c0 34a50000		ori	$a1,$a1,0x00
  262 004006c4 0c100026		jal			complex.mul
  263                   
  264 				li			$a0,'\n
  264 004006c8 3404000a		ori	$a0,$0,0x0A
  265 004006cc 000002cc		syscall		$print_char
  266 				la			$a0,tandt
  266 004006d0 3c040000		lui	$a0,0x00
  266 004006d4 34840000		ori	$a0,$a0,0x00
  267 004006d8 0000010c		syscall		$print_string
  268                   
  269                   
  270 				l.d			$f12,($v0)
  270 004006dc c44c0000		lwc1	$f12,0($v0)
  270 004006e0 c44d0004		lwc1	$f12+1,0+4($v0)
  271 004006e4 000000cc		syscall		$print_double
  272 				la			$a0,SPACE
  272 004006e8 3c040000		lui	$a0,0x00
  272 004006ec 34840000		ori	$a0,$a0,0x00
  273 004006f0 0000010c		syscall		$print_string
  274 				l.d			$f12,8($v0)
  274 004006f4 c44c0008		lwc1	$f12,8($v0)
  274 004006f8 c44d000c		lwc1	$f12+1,8+4($v0)
  275 004006fc 000000cc		syscall		$print_double
  276 				li			$a0,'\n
  276 00400700 3404000a		ori	$a0,$0,0x0A
  277 00400704 000002cc		syscall		$print_char
  278 00400708 030ac020		add			$t8,$t8,$t2 #a+=n
  279 0040070c 08100166		j			sloop
  280                   sloopend:	#             }sloop
  281                   						#             T *= phiT;
  282 				la			$a0,T
  282 00400710 3c040000		lui	$a0,0x00
  282 00400714 34840000		ori	$a0,$a0,0x00
  283 				la			$a1,phiT
  283 00400718 3c050000		lui	$a1,0x00
  283 0040071c 34a50000		ori	$a1,$a1,0x00
  284 				la			$v0,T
  284 00400720 3c020000		lui	$v0,0x00
  284 00400724 34420000		ori	$v0,$v0,0x00
  285                   
  286 00400728 0c100026		jal			complex.mul
  287                   
  288 				addi			$t9,1
  288 0040072c 23390001		addi	$t9,$t9,1
  289 				la			$a0,TtT
  289 00400730 3c040000		lui	$a0,0x00
  289 00400734 34840000		ori	$a0,$a0,0x00
  290 00400738 0000010c		syscall		$print_string
  291                   	
  292 				l.d			$f12,complex.real($v0)
  292 0040073c c44c0000		lwc1	$f12,complex.real($v0)
  292 00400740 c44d0004		lwc1	$f12+1,complex.real+4($v0)
  293 00400744 000000cc		syscall		$print_double
  294                   
  295 				la			$a0,SPACE
  295 00400748 3c040000		lui	$a0,0x00
  295 0040074c 34840000		ori	$a0,$a0,0x00
  296 00400750 0000010c		syscall		$print_string
  297                   
  298 				l.d			$f12,complex.imaginary($v0)
  298 00400754 c44c0008		lwc1	$f12,complex.imaginary($v0)
  298 00400758 c44d000c		lwc1	$f12+1,complex.imaginary+4($v0)
  299 0040075c 000000cc		syscall		$print_double	
  300                   
  301 00400760 08100163		j			tloop			#         }floop
  302                   
  303                   tloopend:
  304 00400764 08100132		j			top
  305                   
  306                   #end of while lop
  307                   	
  308                   				#     }while
  309                   whileend:
  310 00400768 0c000000		jal			printalldata
  311 				la			$s6,decimationtable
  311 0040076c 3c161001		lui	$s6,0x1001
  311 00400770 36d60020		ori	$s6,$s6,0x20
  312                   
  313                   				#     // Decimate
  314                   				#     //    unsigned int m = (unsigned int)log2(N);
  315                   			#     
  316 				li			$t8,0 #a=0				#{
  316 00400774 34180000		ori	$t8,$0,0x00
  317 				lw			$s7,N
  317 00400778 3c010000		lui	$at,N&0x8000<<1+N>>16
  317 0040077c 8c370000		lw	$s7,N&0xFFFF($at)	
  318                   # 	li			$a0,'V
  319                   # 	syscall		$print_char
  320 				l.d			$f12,phiT
  320 00400780 3c010000		lui	$at,phiT&0x8000<<1+phiT>>16
  320 00400784 c42c0000		lwc1	$f12,phiT&0xFFFF($at)
  320 00400788 c42d0000		lwc1	$f12+1,phiT&0xFFFF+4($at)
  321 0040078c 000000cc		syscall		$print_double
  322                   
  323                   
  324                   
  325                   	#t8 = a
  326                   	#s7 = N
  327                   
  328 				lw	$t7,Data
  328 00400790 3c010000		lui	$at,Data&0x8000<<1+Data>>16
  328 00400794 8c2f0000		lw	$t7,Data&0xFFFF($at)	
  329 				la			$s6,decimationtable
  329 00400798 3c161001		lui	$s6,0x1001
  329 0040079c 36d60020		ori	$s6,$s6,0x20
  330 				li	$t8,0	#debug here	This is the i for the for loop
  330 004007a0 34180000		ori	$t8,$0,0x00
  331                   Decimate:
  332                   bga:
  333                   
  334                   
  335                   
  336                   
  337                   
  338                   # 	jal			printalldata  #breakpointhere
  339                   
  340                   	#while N>a
  341 				bge			$t8,$s7,FinishDecimate	#     for (unsigned int a = 0; a < N; a++)
  341 004007a4 0317082a		slt	$at,$t8,$s7
  341 004007a8 10200042		beq	$at,$0,FinishDecimate
  342                   
  343                   
  344                   
  345                   
  346                   
  347                   				#         unsigned int b = a;
  348 004007ac 03005821		mov			$t3,$t8
  349                   				#         // Reverse bits
  350                   				#         b = (((b & 0xaaaaaaaa) >> 1) | ((b & 0x55555555) << 1));
  351 004007b0 8ed30000		lw			$s3,0($s6)
  352                   
  353 004007b4 0173c824		and			$t9,$t3,$s3
  354 004007b8 0019c842		srl			$t9,$t9,1
  355                   
  356 004007bc 8ed30004		lw			$s3,4($s6)
  357 004007c0 01739024		and			$s2,$t3,$s3
  358 004007c4 00129040		sll			$s2,$s2,1
  359 004007c8 03325825		or			$t3,$t9,$s2
  360                   				#         b = (((b & 0xcccccccc) >> 2) | ((b & 0x33333333) << 2));
  361 004007cc 8ed30008		lw			$s3,8($s6)
  362 004007d0 0173c824		and			$t9,$t3,$s3
  363 004007d4 0019c882		srl			$t9,$t9,2
  364 004007d8 8ed3000c		lw			$s3,12($s6)
  365                   
  366 004007dc 01739024		and			$s2,$t3,$s3
  367 004007e0 00129080		sll			$s2,$s2,2
  368 004007e4 03325825		or			$t3,$t9,$s2
  369                   				#         b = (((b & 0xf0f0f0f0) >> 4) | ((b & 0x0f0f0f0f) << 4));
  370                   
  371 004007e8 8ed30010		lw			$s3,16($s6)
  372 004007ec 0173c824		and			$t9,$t3,$s3
  373 004007f0 0019c902		srl			$t9,$t9,4
  374 004007f4 8ed30014		lw			$s3,20($s6)
  375 004007f8 01739024		and			$s2,$t3,$s3
  376 004007fc 00129100		sll			$s2,$s2,4
  377 00400800 03325825		or			$t3,$t9,$s2
  378                   				#         b = (((b & 0xff00ff00) >> 8) | ((b & 0x00ff00ff) << 8));
  379 00400804 8ed30018		lw			$s3,24($s6)
  380 00400808 0173c824		and			$t9,$t3,$s3
  381 0040080c 0019ca02		srl			$t9,$t9,8
  382 00400810 8ed3001c		lw			$s3,28($s6)
  383 00400814 01739024		and			$s2,$t3,$s3
  384 00400818 00129200		sll			$s2,$s2,8
  385 0040081c 03325825		or			$t3,$t9,$s2
  386                   				#         b = ((b >> 16) | (b << 16)) >> (32 - m);
  387 00400820 000bcc02		srl			$t9,$t3,16
  388 00400824 000b8400		sll			$s0,$t3,16
  389                   	
  390 00400828 0330c825		or			$t9,$t9,$s0
  391                   
  392 				lw			$v1,m
  392 0040082c 3c010000		lui	$at,m&0x8000<<1+m>>16
  392 00400830 8c230000		lw	$v1,m&0xFFFF($at)	
  393 00400834 00031822		neg			$v1,$v1
  394 00400838 20710020		addi			$s1,$v1,32
  395 0040083c 02395806		srl			$t3,$t9,$s1
  396                   	
  397                   # bgaa:				#         if (b > a)
  398                   				#         {
  399 				bgt			$t8,$t3,2f
  399 00400840 0178082a		slt	$at,$t3,$t8
  399 00400844 14200019		bne	$at,$0,2f
  400 00400848 130b0018		beq			$t8,$t3,2f
  401                   1:				#             //            Complex t = x[a];
  402                   
  403                   
  404                   
  405                   
  406                   
  407                   
  408 				li			$s7,16
  408 0040084c 34170010		ori	$s7,$0,0x10
  409 				mul			$s4,$s7,$t8
  409 00400850 02f80018		mult	$s7,$t8
  409 00400854 0000a012		mflo	$s4
  410 00400858 01f4a020		add			$s4,$t7,$s4
  411 				l.d			$f0,complex.real($s4)
  411 0040085c c6800000		lwc1	$f0,complex.real($s4)
  411 00400860 c6810004		lwc1	$f0+1,complex.real+4($s4)
  412 				l.d			$f2,complex.imaginary($s4)
  412 00400864 c6820008		lwc1	$f2,complex.imaginary($s4)
  412 00400868 c683000c		lwc1	$f2+1,complex.imaginary+4($s4)
  413                   # 	s.d			$f0,t
  414                   # 	l.d			$f2,t
  415                   			#             //            x[a] = x[b];
  416 				li			$s7,16
  416 0040086c 34170010		ori	$s7,$0,0x10
  417 				mul			$s7,$s7,$t3
  417 00400870 02eb0018		mult	$s7,$t3
  417 00400874 0000b812		mflo	$s7
  418 00400878 01f7a820		add			$s5,$t7,$s7	#s5 is x[b]
  419 				l.d			$f4,complex.real($s5)
  419 0040087c c6a40000		lwc1	$f4,complex.real($s5)
  419 00400880 c6a50004		lwc1	$f4+1,complex.real+4($s5)
  420 				l.d			$f6,complex.imaginary($s5)
  420 00400884 c6a60008		lwc1	$f6,complex.imaginary($s5)
  420 00400888 c6a7000c		lwc1	$f6+1,complex.imaginary+4($s5)
  421                   		#we do the swap in 4 instructions
  422 				s.d			$f4,complex.real($s4)	
  422 0040088c e6840000		swc1	$f4,complex.real($s4)
  422 00400890 e6850004		swc1	$f4+1,complex.real+4($s4)
  423 				s.d			$f6,complex.imaginary($s4)
  423 00400894 e6860008		swc1	$f6,complex.imaginary($s4)
  423 00400898 e687000c		swc1	$f6+1,complex.imaginary+4($s4)
  424 				s.d			$f0,complex.real($s5)	
  424 0040089c e6a00000		swc1	$f0,complex.real($s5)
  424 004008a0 e6a10004		swc1	$f0+1,complex.real+4($s5)
  425 				s.d			$f2,complex.imaginary($s5)
  425 004008a4 e6a20008		swc1	$f2,complex.imaginary($s5)
  425 004008a8 e6a3000c		swc1	$f2+1,complex.imaginary+4($s5)
  426                   
  427                   
  428                   ##################################################swap end
  429                   				#         }
  430                   2:
  431                   
  432 				addi			$t8,1
  432 004008ac 23180001		addi	$t8,$t8,1
  433 004008b0 081001e9		j			Decimate	
  434                   FinishDecimate:	
  435                   		#     }
  436                   			
  437                   
  438 				li			$a0,'\n
  438 004008b4 3404000a		ori	$a0,$0,0x0A
  439 004008b8 000002cc		syscall			$print_char
  440                   # 	lw			$a0,Data
  441                   # 	syscall			$print_int
  442                   
  443                   
  444                   
  445                   
  446                   97:	
  447                   
  448                   
  449                   
  450                   
  451                   END:
  452                   # 	  jal			printalldata
  453                   
  454                   
  455                   98:	
  456                   
  457                   	
  458 004008bc 8fdf0000		lw	$ra,fp.ra($fp)	# restore registers from stacksese
  459 004008c0 8fd00000		lw	$s0,fp.s0($fp)
  460 004008c4 8fd10000		lw	$s1,fp.s1($fp)
  461 004008c8 8fd20000		lw	$s2,fp.s2($fp)
  462 004008cc 8fd30000		lw	$s3,fp.s3($fp)
  463 004008d0 8fd40000		lw	$s4,fp.s4($fp)
  464 004008d4 8fde0000		lw	$fp,fp.fp($fp)
  465 004008d8 23bd0000		add	$sp,$sp,fp.a4-fp.s4
  466 004008dc 03e00008		jr	$ra
  467                   
  468                   
  469                   
  470                   complex.IFFT:	
  471                   
  472 004008e0 23bd0000			addi	$sp,$sp,fp.s4-fp.a4	# standard stack frame
  473 004008e4 afbe0000			sw	$fp,fp.fp-fp.s4($sp)
  474 004008e8 23be0000			add	$fp,$sp,fp.fp-fp.s4
  475 004008ec afdf0000			sw	$ra,fp.ra($fp)
  476 004008f0 afd00000			sw	$s0,fp.s0($fp)
  477 004008f4 afd10000			sw	$s1,fp.s1($fp)
  478 004008f8 afd20000			sw	$s2,fp.s2($fp)
  479 004008fc afd30000			sw	$s3,fp.s3($fp)
  480 00400900 afd40000			sw	$s4,fp.s4($fp)
  481 00400904 afc40000			sw	$a0,fp.a0($fp)
  482 00400908 afc50000			sw	$a1,fp.a1($fp)
  483 0040090c afc60000			sw	$a2,fp.a2($fp)
  484 00400910 afc70000			sw	$a3,fp.a3($fp)	
  485                   #Save those vars
  486                   
  487 					lw	$t0,N
  487 00400914 3c010000		lui	$at,N&0x8000<<1+N>>16
  487 00400918 8c280000		lw	$t0,N&0xFFFF($at)	
  488 					lw	$t1,Data
  488 0040091c 3c010000		lui	$at,Data&0x8000<<1+Data>>16
  488 00400920 8c290000		lw	$t1,Data&0xFFFF($at)	
  489                   
  490                   
  491 00400924 1100000a	1:		beqz	$t0,FirstConj
  492 					l.d	$f12,complex.imaginary($t1)
  492 00400928 c52c0008		lwc1	$f12,complex.imaginary($t1)
  492 0040092c c52d000c		lwc1	$f12+1,complex.imaginary+4($t1)
  493 00400930 44196000			mfc1	$t9,$f12
  494 00400934 13200003			beqz	$t9,nextiter
  495 00400938 46206307			neg.d	$f12,$f12
  496 					s.d	$f12,complex.imaginary($t1)
  496 0040093c e52c0008		swc1	$f12,complex.imaginary($t1)
  496 00400940 e52d000c		swc1	$f12+1,complex.imaginary+4($t1)
  497                   		
  498 			nextiter:	addi	$t0,-1
  498 00400944 2108ffff		addi	$t0,$t0,-1
  499 					addi	$t1,16	#move the point ahead by 16 bytes next complex
  499 00400948 21290010		addi	$t1,$t1,16
  500 0040094c 08100249			j	1b
  501                   
  502                   FirstConj:
  503 00400950 0c1000fc			jal	complex.Cooley_Tukey_FFT	#forward FFT
  504                   	
  505 00400954 0c000000			jal	printalldata #IIFTDEBUG
  506                   	
  507 					lw	$t0,N
  507 00400958 3c010000		lui	$at,N&0x8000<<1+N>>16
  507 0040095c 8c280000		lw	$t0,N&0xFFFF($at)	
  508 					lw	$t1,Data
  508 00400960 3c010000		lui	$at,Data&0x8000<<1+Data>>16
  508 00400964 8c290000		lw	$t1,Data&0xFFFF($at)	
  509                   
  510 00400968 1100000a	1:		beqz	$t0,LastStep
  511 					l.d	$f12,complex.imaginary($t1)
  511 0040096c c52c0008		lwc1	$f12,complex.imaginary($t1)
  511 00400970 c52d000c		lwc1	$f12+1,complex.imaginary+4($t1)
  512 00400974 44196000			mfc1	$t9,$f12
  513 00400978 13200003			beqz	$t9,eqzero
  514 0040097c 46206307			neg.d	$f12,$f12
  515 					s.d	$f12,complex.imaginary($t1)
  515 00400980 e52c0008		swc1	$f12,complex.imaginary($t1)
  515 00400984 e52d000c		swc1	$f12+1,complex.imaginary+4($t1)
  516                   		
  517 			eqzero:		addi	$t0,-1
  517 00400988 2108ffff		addi	$t0,$t0,-1
  518 					addi	$t1,16	#move the point ahead by 16 bytes next complex
  518 0040098c 21290010		addi	$t1,$t1,16
  519 00400990 0810025a			j	1b
  520                   
  521                   
  522                   LastStep:
  523                   
  524 					lw	$t0,N
  524 00400994 3c010000		lui	$at,N&0x8000<<1+N>>16
  524 00400998 8c280000		lw	$t0,N&0xFFFF($at)	
  525 					la	$t3,N
  525 0040099c 3c0b0000		lui	$t3,0x00
  525 004009a0 356b0000		ori	$t3,$t3,0x00
  526 					lw	$t1,Data
  526 004009a4 3c010000		lui	$at,Data&0x8000<<1+Data>>16
  526 004009a8 8c290000		lw	$t1,Data&0xFFFF($at)	
  527                   # 		cvt.d.w	$t0,$f6
  528 004009ac 44883000			mtc1	$t0,$f6
  529 004009b0 468031a1			cvt.d.w	$f6,$f6
  530                   
  531 004009b4 1100000b	1:		beqz	$t0,98f
  532 					l.d	$f12,complex.real($t1)
  532 004009b8 c52c0000		lwc1	$f12,complex.real($t1)
  532 004009bc c52d0004		lwc1	$f12+1,complex.real+4($t1)
  533 004009c0 46266283			div.d	$f10,$f12,$f6
  534 004009c4 46205306			mov.d	$f12,$f10
  535 004009c8 000000cc			syscall	$print_double
  536 					s.d	$f10,complex.real($t1)
  536 004009cc e52a0000		swc1	$f10,complex.real($t1)
  536 004009d0 e52b0004		swc1	$f10+1,complex.real+4($t1)
  537                   		
  538 					addi	$t0,-1
  538 004009d4 2108ffff		addi	$t0,$t0,-1
  539 					addi	$t1,16	#move the point ahead by 16 bytes next complex
  539 004009d8 21290010		addi	$t1,$t1,16
  540 004009dc 0810026d			j	1b
  541                   
  542                   
  543 004009e0 0c000000			jal	printalldata #IIFTDEBUGFFWe
  544                   
  545                   #load vars from caller
  546                   98:	
  547                   
  548                   	
  549 004009e4 8fdf0000		lw	$ra,fp.ra($fp)	# rrestore registers from stacksese
  550 004009e8 8fd00000		lw	$s0,fp.s0($fp)
  551 004009ec 8fd10000		lw	$s1,fp.s1($fp)
  552 004009f0 8fd20000		lw	$s2,fp.s2($fp)
  553 004009f4 8fd30000		lw	$s3,fp.s3($fp)
  554 004009f8 8fd40000		lw	$s4,fp.s4($fp)
  555 004009fc 8fde0000		lw	$fp,fp.fp($fp)
  556 00400a00 23bd0000		add	$sp,$sp,fp.a4-fp.s4
  557 00400a04 03e00008		jr	$ra
  558                   
  559                   
  560                   
  561                   complex.phasor:
  562 00400a08 23bd0000			addi	$sp,$sp,fp.s4-fp.a4	# standard stack frame
  563 00400a0c afbe0000			sw	$fp,fp.fp-fp.s4($sp)
  564 00400a10 23be0000			add	$fp,$sp,fp.fp-fp.s4
  565 00400a14 afdf0000			sw	$ra,fp.ra($fp)
  566 00400a18 afd00000			sw	$s0,fp.s0($fp)
  567 00400a1c afd10000			sw	$s1,fp.s1($fp)
  568 00400a20 afd20000			sw	$s2,fp.s2($fp)
  569 00400a24 afd30000			sw	$s3,fp.s3($fp)
  570 00400a28 afd40000			sw	$s4,fp.s4($fp)
  571 00400a2c afc40000			sw	$a0,fp.a0($fp)
  572 00400a30 afc50000			sw	$a1,fp.a1($fp)
  573 00400a34 afc60000			sw	$a2,fp.a2($fp)
  574 00400a38 afc70000			sw	$a3,fp.a3($fp)	
  575                   
  576                   
  577                   	#for this A = sqrt(real^2 + imag^2)
  578                   	
  579                   
  580                   
  581                   
  582                   
  583 00400a3c 8fdf0000			lw	$ra,fp.ra($fp)	# rrestore registers from stacksese
  584 00400a40 8fd00000			lw	$s0,fp.s0($fp)
  585 00400a44 8fd10000			lw	$s1,fp.s1($fp)
  586 00400a48 8fd20000			lw	$s2,fp.s2($fp)
  587 00400a4c 8fd30000			lw	$s3,fp.s3($fp)
  588 00400a50 8fd40000			lw	$s4,fp.s4($fp)
  589 00400a54 8fde0000			lw	$fp,fp.fp($fp)
  590 00400a58 23bd0000			add	$sp,$sp,fp.a4-fp.s4
  591 00400a5c 03e00008			jr	$ra
			